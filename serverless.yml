service:
  name: todoserverless

plugins:
  - serverless-offline
  - serverless-webpack
  - serverless-dynamodb-local

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includesModules: true
  dynamodb:
    stages:
      - dev
      - local
    start:
      port: 8000
      inMemory: true
      migrate: true

provider:
  name: aws
  runtime: nodejs14.x
  region: sa-east-1
  iamRoleStatements:
    - effect: Allow
      Action: 
        - dynamodb:*
      Resource: "*"

functions:
  createTodo:
    handler: src/functions/createTodo.handle
    events:
      - http: 
          path: /createTodo
          method: POST
          cors: true
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:Query
          - dynamodb:PutItem
        Resource: 
          - "arn:aws:dynamodb:${self.provider.region}:*:table/todos"
  
  getTodos:
    handler: src/functions/listTodos.handle
    events:
      - http:
          path: /listTodos/{id}
          method: GET
          cors: true    
    iamRoleStatements:
      - Effect: Allow
        Action: 
          - dynamodb:Query
        Resource: 
          - "arn:aws:dynamodb:${self.provider.region}:*:table/todos"

resources: 
  Resources: 
    dbTodosUsers: 
      Type: AWS::DynamoDB::Table
      
      Properties:
        TableName: todos
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        AttributeDefinitions: 
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH 
